@using Microsoft.AspNetCore.Components.Authorization
@using EpiConnectFrontEnd.Pages

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <FocusOnNavigate RouteData="@routeData" Selector="h1" />
                    <h1>Autorizando...</h1>
                </Authorizing>
                <NotAuthorized>
                    <h1>Não autorizado</h1>
                    <RedirectToLogin/>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <CascadingAuthenticationState>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p role="alert">Sorry, there's nothing at this address.</p>
                    <RedirectToLogin />
                </LayoutView>
            </CascadingAuthenticationState>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private async Task LogUserAuthenticationState() {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (user.Identity!.IsAuthenticated) {
            Console.WriteLine($"User {user.Identity.Name} is authenticated.");
        }
        else {
            Console.WriteLine("User is NOT authenticated.");
        }
    }
}
